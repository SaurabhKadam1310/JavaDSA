package B3Trie;

public class A3LongestWordWithAllPrefix {
	
	static class Node{
		Node[] children;
		boolean eow;
		public Node() {
			for(int i=0;i<26;i++) {
				children[i]=null;
			}
			eow=false;
		}
	}

	static Node root = new Node();
	
	public static void insert(String word) {
		Node curr=root;
		for(int i=0;i<word.length();i++) {
			int idx = word.charAt(i)-'a';
			if(curr.children[idx]==null) {
				curr.children[idx]=new Node();
			}
			curr = curr.children[idx];
		}
		curr.eow=true;
	}
	
	static String finalAns="";
	
   public static void longestPrefixWord(Node root,StringBuilder temp ){
	   
	   if(root==null) {
		   return;
	   }
	  for(int i=0;i<26;i++) {
		  if(root.children[i]!=null && root.children[i].eow==true) {
			  temp.append((char)(i+'a'));
			  if(temp.length()>finalAns.length()) {
				  finalAns = temp.toString();
			  }
			  longestPrefixWord( root.children[i], temp );
			  temp.deleteCharAt(temp.length()-1);
		  }
	  }
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String words[]= {"a","banana","app","appl","ap","apply","apple"};
		
		for(int i=0;i<words.length;i++) {
			insert(words[i]);
		}
		StringBuilder  tempStr= new StringBuilder("");
		longestPrefixWord(root,tempStr);
		
		System.out.println("Longest prefix String:"+finalAns);

	}

}
